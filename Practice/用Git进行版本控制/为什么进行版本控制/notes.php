<?php

/**
 * 我们需要一种帮助管理协同开发的工具，
 * 让我们能够捕捉项目快照，
 * 在必要时还能够回滚到上一个版本，
 * 并合并多个开发分支的代码。
 *
 * Git是一个分布式的版本控制系统。
 * 这意味着，一旦从中央代码库克隆了自己的副本，
 * 开发人员就可以在无网络连接的情况下将他们自己的代码提交到本地仓库。
 * 这种方式具有很多好处。
 * 日常工作将变得更加快捷，
 * 我们可以在飞机、火车和汽车上轻松工作。
 * 最终，我们可以将代码提交到中央仓库，
 * 与团队中的其他开发人员共享自己的代码。
 *
 * 每位开发人员都可以将自己编写的代码合并到中央仓库中，
 * 这让多人协作开发变得非常容易。
 * 更棒的是，
 * 开发人员能够根据日期或标签签出代码库版本。
 * 因此，当代码稳定时，
 * 我们可以用一个标签来标记它。
 *
 * 不仅如此，我们还可以同时管理多个开发分支。
 * 如果一个项目已经发布了第一版，并且也开始着手第2版的开发了，
 * 那么1.n版本会在此期间消失吗？
 * 当然不会，1.n版本的用户会不断要求我们改正系统错误，
 * 并增加和改善系统功能。
 * 这可能需要几个月才能完成，
 * 那么我们应该在哪里进行修改和测试呢？
 * Git允许我们维护不同的代码库分支。
 * 因此，我们能够以当前生产版本代码为基础创建1.n版本的bug修复分支以进行开发。
 * 在修改完成后，
 * 将这个分支合并到版本2的代码（主干）中，
 * 这样新版本就可以吸收版本1.n中所有改进。
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

