<?php

/**
 * RSS 指 Really Simple Syndication（真正简易联合）
 *
 *
 *
 * 设计良好的架构比编写一些胶水式的代码将三四个现有组件"粘"在一起更有意义。
 *
 *
 * Composer是以每个项目为基础管理软件包的，
 * 所以不太容易出现不同软件包需要同一个库的不兼容版本。
 *
 * RFC 822是电子邮件的标准格式。
 *
 *
 *
 * 不愿意使用第三方工具和解决方案往往是制度上的问题。
 * 这种怀疑外部产品的倾向有时被称为非原创综合征。
 *
 * 构建工具能够决定默认的安装位置、检查和更改权限、创建数据库、初始化变量并完成其他任务。
 * 事实上，构建工具可以完成构建应用过程中的所有工作，
 * 从代码库读取源代码到完成整个部署。
 *
 * PEAR是集中化管理，Composer则是本地管理。
 *
 * Phing是一个基于Ant的开源项目，用PHP编写的用于构建PHP的应用工具。
 * 刚开始使用Phing时可能会觉得感觉有些困难，但它具有巨大的灵活性。
 * 我们不仅可以用Phing自动执行从文件复制到XSLT转换的任何操作，
 * 还可以轻松编写和合并自己的任务并根据需要扩展该工具。
 * Phing是用PHP的面向对象特性编写的，
 * 其设计更强调模块化和易扩展性。
 *
 *
 * 通常来书，我们应当在开发过程中使用构建工具来运行测试、
 * 管理项目，并构建软件包，
 * 最终通过PEAR、Composer甚至是RPM和Apt等基于分发包的管理系统来部署软件包。
 *
 * PHP-FIG小组管理的一组规范
 * 这些PHP标准规范（PSR，PHP Standards Recommendations）涵盖了从缓存到安全的所有内容。
 * 支持PSR-4是Composer的一大优势。
 *
 * 测试套件指的是既可以整体应用于系统，
 * 也可以分别应用于各个单独类的一组自动化测试。
 * 可以让我们对代码修改更具自信。
 * 测试失败可能会为我们实现头脑中的新代码提供难得的思路。
 *
 *
 * 持续集成（CI，continues integration）
 * 持续集成即是一种实践，也是一套尽可能简化该实践的工具。
 * 持续集成发现的任何问题都将被跟踪，
 * 并向我们发送通知，
 * 以免生产环境发生这些问题。
 *
 * 开发人员的目标是始终提供一个能够工作的系统。
 * 编写优秀的代码是实现这个目标的重要部分，但并非全部。
 *
 *
 */

