<?php

/**
 * 
 *
 *  配置自己的Git服务器
 *
 *  Git与传统的版本控制系统有两个关键的不同之处。
 *  首先，它的底层存储的是文件快照，
 *  而不是文件在两次提交之间的改动。
 *  第二点对用户来说更加直观：
 *  直到决定将代码推送到远程代码库或从远程代码库获取代码，
 *  前面操作的都是本地代码库。
 *  这意味着，即使没有接入互联网，
 *  我们也可以继续工作。
 *
 *  虽然使用Git并不一定需要远程代码库，
 *  但在实际项目中，
 *  我们通常都是与队友协作，
 *  因此，最好配置一个自己的远程代码库。
 *
 *  接下来将介绍启动和运行远程Git服务器的步骤。
 *  进行这些操作的前提是具有以root用户访问Linux服务器的权限。
 *
 *  创建远程服务器
 *  $ sudo mkdir -p /var/git/megauiz  创建代码库目录
 *  $ cd /var/git/megaquiz/
 *  $ sudo git init --bare
 *
 *  --bare选项告诉Git初始化一个没有工作目录的仓库。
 *  如果不以这种方式创建代码库，
 *  那么Git会在视图推送代码时报错。
 *
 *  创建一个名为git的用户以及一个名为git的用户组并将其设置为/var/git目录的所有者，
 *  $ sudo adduser git
 *  $ sudo chown -R git:git /var/git
 *
 *  为本地用户创建仓库
 *  虽然这是一个远程服务器，
 *  但我们还需要确保本地用户可以提交代码到这个代码库。
 *  这里需要特别小心，稍不注意就会发生所有权和执行权权限问题
 * （特别是具有sudo权限的用户推送代码时）。
 *  $ sudo chmod -R g+rws /var/git
 *  这条命令赋予了git组的成员对/var/git的写访问权限，
 *  并且设置这里创建的所有文件和目录都属于git组。
 *  现在，只要确保本地用户是git组的成员，
 *  他们就能够将代码提交到代码库。
 *  不仅如此，
 *  一位成员创建的代码文件还能够被git组中的其他成员修改并提交。
 *  可以通过以下命令添加一位本地用户到git组中。
 *  $ sudo usermod -aG git bob
 *  现在bob是git组的一员了。
 *
 *  设置用户的访问权限
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */
